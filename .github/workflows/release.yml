name: Release
on:
  release:
    types: [ published ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push frontend Image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: Dockerfile
          push: true
          build-args: |
            VITE_IDENTITY_URL=${{ secrets.VITE_IDENTITY_URL }}
            VITE_SCHEDULE_URL=${{ secrets.VITE_SCHEDULE_URL }}
            VITE_EVENTS_URL=${{ secrets.VITE_EVENTS_URL }}
          tags: |
            ghcr.io/kiespetch1/frontend:${{ github.event.release.tag_name }}
            ghcr.io/kiespetch1/frontend:latest
            
      - name: Copy docker-compose.yaml to VPS
        uses: appleboy/scp-action@v0.1.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          source: |
            docker-compose.yaml
          target: "~/unischedule-staging"


  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Copy docker-compose files to VPS
        uses: appleboy/scp-action@v0.1.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          source: "./docker-compose.yaml"
          target: "~/unischedule-staging"

      - name: Deploy on VPS
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd unischedule-staging
            echo ${{ secrets.GHCR_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
            cat <<EOF > .env.frontend
            VITE_IDENTITY_URL=${{ secrets.VITE_IDENTITY_URL }}
            VITE_SCHEDULE_URL=${{ secrets.VITE_SCHEDULE_URL }}
            VITE_EVENTS_URL=${{ secrets.VITE_EVENTS_URL }}
            EOF
            docker network inspect unischedule-staging_shared-network >/dev/null 2>&1 \ || docker network create unischedule-staging_shared-network
            docker network inspect unischedule-staging_monitoring >/dev/null 2>&1 \ || docker network create unischedule-staging_monitoring
            docker volume inspect app-logs >/dev/null 2>&1 \ || docker volume create app-logs
            docker compose pull
            docker compose up -d
